{
  "version": 3,
  "sources": ["../../node_modules/ramda/es/internal/_isPlaceholder.js", "../../node_modules/ramda/es/internal/_curry1.js", "../../node_modules/ramda/es/internal/_curry2.js", "../../node_modules/ramda/es/add.js", "../../node_modules/ramda/es/internal/_arity.js", "../../node_modules/ramda/es/internal/_curryN.js", "../../node_modules/ramda/es/curryN.js", "../../node_modules/ramda/es/internal/_curry3.js", "../../node_modules/ramda/es/internal/_isArray.js", "../../node_modules/ramda/es/internal/_isTransformer.js", "../../node_modules/ramda/es/internal/_dispatchable.js", "../../node_modules/ramda/es/internal/_xfBase.js", "../../node_modules/ramda/es/internal/_map.js", "../../node_modules/ramda/es/internal/_isString.js", "../../node_modules/ramda/es/internal/_isArrayLike.js", "../../node_modules/ramda/es/internal/_xwrap.js", "../../node_modules/ramda/es/bind.js", "../../node_modules/ramda/es/internal/_reduce.js", "../../node_modules/ramda/es/internal/_xmap.js", "../../node_modules/ramda/es/internal/_has.js", "../../node_modules/ramda/es/internal/_isArguments.js", "../../node_modules/ramda/es/keys.js", "../../node_modules/ramda/es/map.js", "../../node_modules/ramda/es/nth.js", "../../node_modules/ramda/es/reduce.js", "../../node_modules/ramda/es/values.js", "../../node_modules/ramda/es/internal/_isFunction.js", "../../node_modules/ramda/es/internal/_cloneRegExp.js", "../../node_modules/ramda/es/type.js", "../../node_modules/ramda/es/internal/_clone.js", "../../node_modules/ramda/es/internal/_pipe.js", "../../node_modules/ramda/es/internal/_checkForMethod.js", "../../node_modules/ramda/es/slice.js", "../../node_modules/ramda/es/tail.js", "../../node_modules/ramda/es/pipe.js", "../../node_modules/ramda/es/reverse.js", "../../node_modules/ramda/es/internal/_identity.js", "../../node_modules/ramda/es/identity.js", "../../node_modules/ramda/es/internal/_arrayFromIterator.js", "../../node_modules/ramda/es/internal/_includesWith.js", "../../node_modules/ramda/es/internal/_functionName.js", "../../node_modules/ramda/es/internal/_objectIs.js", "../../node_modules/ramda/es/internal/_equals.js", "../../node_modules/ramda/es/equals.js", "../../node_modules/ramda/es/internal/_indexOf.js", "../../node_modules/ramda/es/internal/_includes.js", "../../node_modules/ramda/es/internal/_quote.js", "../../node_modules/ramda/es/internal/_toISOString.js", "../../node_modules/ramda/es/internal/_complement.js", "../../node_modules/ramda/es/internal/_filter.js", "../../node_modules/ramda/es/internal/_isObject.js", "../../node_modules/ramda/es/internal/_xfilter.js", "../../node_modules/ramda/es/filter.js", "../../node_modules/ramda/es/reject.js", "../../node_modules/ramda/es/internal/_toString.js", "../../node_modules/ramda/es/toString.js", "../../node_modules/ramda/es/internal/_xreduceBy.js", "../../node_modules/ramda/es/reduceBy.js", "../../node_modules/ramda/es/countBy.js", "../../node_modules/ramda/es/internal/_Set.js", "../../node_modules/ramda/es/internal/_xdrop.js", "../../node_modules/ramda/es/drop.js", "../../node_modules/ramda/es/last.js", "../../node_modules/ramda/es/takeLast.js", "../../node_modules/ramda/es/fromPairs.js", "../../node_modules/ramda/es/uniqBy.js", "../../node_modules/ramda/es/uniq.js", "../../node_modules/ramda/es/invoker.js", "../../node_modules/ramda/es/sum.js", "../../node_modules/ramda/es/sortBy.js", "../../node_modules/ramda/es/toLower.js", "../../node_modules/ramda/es/toPairs.js", "../predictionRamda.mjs", "../src/keyboard.js"],
  "sourcesContent": ["export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}", "import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}", "import _curry1 from \"./_curry1.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\n\nvar add =\n/*#__PURE__*/\n_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n\nexport default add;", "export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}", "import _arity from \"./_arity.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}", "import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _curryN from \"./internal/_curryN.js\";\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nexport default curryN;", "import _curry1 from \"./_curry1.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}", "/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};", "export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}", "import _isArray from \"./_isArray.js\";\nimport _isTransformer from \"./_isTransformer.js\";\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}", "export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};", "export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}", "export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}", "import _curry1 from \"./_curry1.js\";\nimport _isArray from \"./_isArray.js\";\nimport _isString from \"./_isString.js\";\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nexport default _isArrayLike;", "var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}", "import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nexport default bind;", "import _isArrayLike from \"./_isArrayLike.js\";\nimport _xwrap from \"./_xwrap.js\";\nimport bind from \"../bind.js\";\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}", "import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nexport default _xmap;", "export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}", "import _has from \"./_has.js\";\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;", "import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArguments from \"./internal/_isArguments.js\"; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nexport default keys;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _map from \"./internal/_map.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xmap from \"./internal/_xmap.js\";\nimport curryN from \"./curryN.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nexport default map;", "import _curry2 from \"./internal/_curry2.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nexport default nth;", "import _curry3 from \"./internal/_curry3.js\";\nimport _reduce from \"./internal/_reduce.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nexport default reduce;", "import _curry1 from \"./internal/_curry1.js\";\nimport keys from \"./keys.js\";\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\nvar values =\n/*#__PURE__*/\n_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});\n\nexport default values;", "export default function _isFunction(x) {\n  var type = Object.prototype.toString.call(x);\n  return type === '[object Function]' || type === '[object AsyncFunction]' || type === '[object GeneratorFunction]' || type === '[object AsyncGeneratorFunction]';\n}", "export default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;", "import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    default:\n      return value;\n  }\n}", "export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}", "import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}", "import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;", "import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nexport default tail;", "import _arity from \"./internal/_arity.js\";\nimport _pipe from \"./internal/_pipe.js\";\nimport reduce from \"./reduce.js\";\nimport tail from \"./tail.js\";\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}", "import _curry1 from \"./internal/_curry1.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\n\nvar reverse =\n/*#__PURE__*/\n_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\n\nexport default reverse;", "export default function _identity(x) {\n  return x;\n}", "import _curry1 from \"./internal/_curry1.js\";\nimport _identity from \"./internal/_identity.js\";\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nexport default identity;", "export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}", "export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}", "export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}", "// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;", "import _arrayFromIterator from \"./_arrayFromIterator.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _functionName from \"./_functionName.js\";\nimport _has from \"./_has.js\";\nimport _objectIs from \"./_objectIs.js\";\nimport keys from \"../keys.js\";\nimport type from \"../type.js\";\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}", "import _curry2 from \"./internal/_curry2.js\";\nimport _equals from \"./internal/_equals.js\";\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;", "import equals from \"../equals.js\";\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}", "import _indexOf from \"./_indexOf.js\";\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}", "export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}", "/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;", "export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}", "export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}", "export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}", "import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFilter =\n/*#__PURE__*/\nfunction () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter =\n/*#__PURE__*/\n_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\n\nexport default _xfilter;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _filter from \"./internal/_filter.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xfilter from \"./internal/_xfilter.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar filter =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nexport default filter;", "import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport filter from \"./filter.js\";\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar reject =\n/*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nexport default reject;", "import _includes from \"./_includes.js\";\nimport _map from \"./_map.js\";\nimport _quote from \"./_quote.js\";\nimport _toISOString from \"./_toISOString.js\";\nimport keys from \"../keys.js\";\nimport reject from \"../reject.js\";\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}", "import _curry1 from \"./internal/_curry1.js\";\nimport _toString from \"./internal/_toString.js\";\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nexport default toString;", "import _curryN from \"./_curryN.js\";\nimport _has from \"./_has.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XReduceBy =\n/*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy =\n/*#__PURE__*/\n_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\n\nexport default _xreduceBy;", "import _clone from \"./internal/_clone.js\";\nimport _curryN from \"./internal/_curryN.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _has from \"./internal/_has.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xreduceBy from \"./internal/_xreduceBy.js\";\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\nvar reduceBy =\n/*#__PURE__*/\n_curryN(4, [],\n/*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, [], [], false), elt);\n    return acc;\n  }, {}, list);\n}));\n\nexport default reduceBy;", "import reduceBy from \"./reduceBy.js\";\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      const numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      const letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\n\nvar countBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;", "import _includes from \"./_includes.js\";\n\nvar _Set =\n/*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        }\n\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n\n        return false;\n      } // scan through all previously applied items\n\n\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n\n        return false;\n      }\n\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\n\nexport default _Set;", "import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDrop =\n/*#__PURE__*/\nfunction () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop =\n/*#__PURE__*/\n_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\n\nexport default _xdrop;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdrop from \"./internal/_xdrop.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\nvar drop =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\nexport default drop;", "import nth from \"./nth.js\";\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\nvar last =\n/*#__PURE__*/\nnth(-1);\nexport default last;", "import _curry2 from \"./internal/_curry2.js\";\nimport drop from \"./drop.js\";\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\n\nvar takeLast =\n/*#__PURE__*/\n_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\n\nexport default takeLast;", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar fromPairs =\n/*#__PURE__*/\n_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default fromPairs;", "import _Set from \"./internal/_Set.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\n\nvar uniqBy =\n/*#__PURE__*/\n_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default uniqBy;", "import identity from \"./identity.js\";\nimport uniqBy from \"./uniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\n\nvar uniq =\n/*#__PURE__*/\nuniqBy(identity);\nexport default uniq;", "import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport curryN from \"./curryN.js\";\nimport toString from \"./toString.js\";\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of any of the target object's methods to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n *\n *      const dog = {\n *        speak: async () => 'Woof!'\n *      };\n *      const speak = R.invoker(0, 'speak');\n *      speak(dog).then(console.log) //~> 'Woof!'\n *\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\nvar invoker =\n/*#__PURE__*/\n_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\nexport default invoker;", "import add from \"./add.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\n\nvar sum =\n/*#__PURE__*/\nreduce(add, 0);\nexport default sum;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\n\nvar sortBy =\n/*#__PURE__*/\n_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n\nexport default sortBy;", "import invoker from \"./invoker.js\";\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\nvar toLower =\n/*#__PURE__*/\ninvoker(0, 'toLowerCase');\nexport default toLower;", "import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\nvar toPairs =\n/*#__PURE__*/\n_curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});\n\nexport default toPairs;", "import * as R from \"ramda\";\r\n\r\nexport let wordFrequencyMap = {};\r\nexport let markovWordTransitions = {};\r\nexport let markovLetterTransitions = {};\r\n\r\n/**\r\n * Initialise la fr\u00E9quence des mots du corpus\r\n * @param {string[]} tokens - Liste de tokens extraits du corpus\r\n */\r\nexport const setCorpusWords = (tokens) => {\r\n    wordFrequencyMap = R.countBy(R.toLower)(tokens);\r\n};\r\n\r\n/**\r\n * Charge les mod\u00E8les Markov\r\n * @param {Object} wordTransitions - Transitions entre mots (bigrammes)\r\n * @param {Object} letterTransitions - Transitions entre lettres\r\n */\r\nexport const loadMarkovModels = (wordTransitions, letterTransitions) => {\r\n    markovWordTransitions = wordTransitions;\r\n    markovLetterTransitions = letterTransitions;\r\n};\r\n\r\n/**\r\n * Pr\u00E9dit les prochaines lettres en combinant contexte, transitions de mots et transitions de lettres\r\n * @param {string[]} context - Contexte pr\u00E9c\u00E9dent (mots avant le mot actuel)\r\n * @param {string} currentPrefix - D\u00E9but du mot en cours d'\u00E9criture\r\n * @returns {Object} - Objet { lettre: probabilit\u00E9 } tri\u00E9 par probabilit\u00E9 d\u00E9croissante\r\n */\r\nexport const predictNextLetters = (context, currentPrefix) => {\r\n    const currentPrefixLower = currentPrefix.toLowerCase();\r\n    const contextLower = context.map(R.toLower);\r\n\r\n    const wordCompletionProbs = getWordCompletionProbs(currentPrefixLower);\r\n    const contextBasedProbs = getContextBasedProbs(contextLower, currentPrefixLower);\r\n    const letterTransitionProbs = getLetterTransitionProbs(currentPrefixLower);\r\n\r\n    return combineProbabilities(wordCompletionProbs, contextBasedProbs, letterTransitionProbs);\r\n};\r\n\r\nconst getWordCompletionProbs = (prefix) => {\r\n    // Filtrer mots commen\u00E7ant par prefix et plus longs, r\u00E9cup\u00E9rer la lettre suivante + fr\u00E9quence\r\n    const filtered = R.pipe(\r\n        R.toPairs,\r\n        R.filter(([word]) => word.startsWith(prefix) && word.length > prefix.length),\r\n        R.reduce((acc, [word, freq]) => {\r\n            const nextChar = word[prefix.length];\r\n            acc[nextChar] = (acc[nextChar] || 0) + freq;\r\n            return acc;\r\n        }, {})\r\n    )(wordFrequencyMap);\r\n\r\n    const total = R.sum(R.values(filtered));\r\n    return total > 0 ? normalizeProbs(filtered, total) : {};\r\n};\r\n\r\nconst getContextBasedProbs = (context, prefix) => {\r\n    if (context.length === 0) return {};\r\n\r\n    const contextKey = R.takeLast(2, context).join(\" \"); // Derniers deux mots\r\n    const nextWordDist = markovWordTransitions[contextKey] || {};\r\n\r\n    const filtered = R.pipe(\r\n        R.toPairs,\r\n        R.filter(([word]) => word.startsWith(prefix) && word.length > prefix.length),\r\n        R.reduce((acc, [word, prob]) => {\r\n            const nextChar = word[prefix.length];\r\n            acc[nextChar] = (acc[nextChar] || 0) + prob;\r\n            return acc;\r\n        }, {})\r\n    )(nextWordDist);\r\n\r\n    const total = R.sum(R.values(filtered));\r\n    return total > 0 ? normalizeProbs(filtered, total) : {};\r\n};\r\n\r\nconst getLetterTransitionProbs = (prefix) => {\r\n    if (prefix.length === 0) return {};\r\n\r\n    const lastChars = prefix.slice(-2); // Derniers deux caract\u00E8res\r\n    const transitions = markovLetterTransitions[lastChars] || {};\r\n\r\n    const total = R.sum(R.values(transitions));\r\n    return total > 0 ? normalizeProbs(transitions, total) : {};\r\n};\r\n\r\nconst combineProbabilities = (probsA, probsB, probsC) => {\r\n    const weights = { A: 0.4, B: 0.4, C: 0.2 }; // Coefficients de poids qui permettent de modifier l'importance des mod\u00E8les\r\n    // A+B+C = 1 !!!!\r\n    // A pour privil\u00E9gier le mot le plus fr\u00E9quent existant dans le corpus\r\n    // B pour privil\u00E9gier le contexte\r\n    // C pour privil\u00E9gier la transition des lettres\r\n    const allKeys = R.uniq([\r\n        ...R.keys(probsA), // trois petits points (...) permettent de concattener les tableaux\r\n        ...R.keys(probsB),\r\n        ...R.keys(probsC),\r\n    ]);\r\n\r\n    const combined = R.reduce(\r\n        (acc, key) => ({\r\n            ...acc,\r\n            [key]:\r\n                (probsA[key] || 0) * weights.A +\r\n                (probsB[key] || 0) * weights.B +\r\n                (probsC[key] || 0) * weights.C,\r\n        }),\r\n        {},\r\n        allKeys\r\n    );\r\n\r\n    return normalizeAndSort(combined);\r\n};\r\n\r\nconst normalizeProbs = (counts, total) =>\r\n    R.map((v) => v / total, counts);\r\n\r\nconst normalizeAndSort = (probs) => {\r\n    const total = R.sum(R.values(probs));\r\n    if (total <= 0) return { \" \": 1 }; // cas particulier lorsque probs est vide, permet de passer au mot suivant\r\n\r\n    return R.pipe(\r\n        R.map((v) => v / total),\r\n        R.toPairs,\r\n        R.sortBy(R.last), // tri par probabilit\u00E9\r\n        R.reverse,\r\n        R.fromPairs\r\n    )(probs);\r\n};\r\n", "import { loadMarkovModels, predictNextLetters, setCorpusWords } from '../predictionRamda.mjs';\r\n\r\n// Variables pour l'\u00E9tat d'initialisation, en r\u00E9sum\u00E9 voir si les mod\u00E8les sont charg\u00E9s\r\nlet isInitialized = false;\r\n\r\n// Fonction pour initialiser les mod\u00E8les de pr\u00E9diction\r\nasync function initializePredictionModels() {\r\n    if (isInitialized) {\r\n        console.log('Les mod\u00E8les sont d\u00E9j\u00E0 initialis\u00E9s');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        console.log('V\u00E9rification de predictionAPI...');\r\n        if (!window.predictionAPI) {\r\n            throw new Error('predictionAPI n\\'est pas disponible dans le contexte de rendu');\r\n        }\r\n\r\n        console.log('Chargement du corpus...');\r\n        const corpusText = await window.predictionAPI.loadCorpus();\r\n\r\n        if (!corpusText) {\r\n            throw new Error('Le corpus est vide');\r\n        }\r\n\r\n        console.log('Corpus charg\u00E9, tokenisation en cours...');\r\n        // Tokenisation du texte, permet d'obtenir un tableau de mots\r\n        const tokens = corpusText\r\n            .toLowerCase()\r\n            .replace(/[^a-z0-9\\s!:;,]/gi, ' ')\r\n            .split(/\\s+/)\r\n            .filter(Boolean);\r\n\r\n        console.log(`Corpus tokenis\u00E9: ${tokens.length} tokens`);\r\n        setCorpusWords(tokens);\r\n\r\n        console.log('Chargement des mod\u00E8les Markov...');\r\n        const markovData = await window.predictionAPI.loadMarkovData();\r\n\r\n        if (!markovData || !markovData.wordTransitions || !markovData.letterTransitions) {\r\n            throw new Error('Donn\u00E9es Markov invalides');\r\n        }\r\n\r\n        const { wordTransitions, letterTransitions } = markovData;\r\n\r\n        console.log('Normalisation des mod\u00E8les Markov...');\r\n        // Normalisation des cl\u00E9s en minuscules\r\n        const lowerWordTrans = Object.fromEntries(\r\n            Object.entries(wordTransitions).map(([k, dist]) => [\r\n                k.toLowerCase(),\r\n                Object.fromEntries(\r\n                    Object.entries(dist).map(([w, p]) => [w.toLowerCase(), p])\r\n                )\r\n            ])\r\n        );\r\n\r\n        console.log('Chargement des mod\u00E8les...');\r\n        loadMarkovModels(lowerWordTrans, letterTransitions);\r\n        isInitialized = true;\r\n        console.log('Mod\u00E8les de pr\u00E9diction initialis\u00E9s avec succ\u00E8s');\r\n    } catch (error) {\r\n        console.error('Erreur critique lors de l\\'initialisation des mod\u00E8les:', error);\r\n        // Ne pas lancer l'application si l'initialisation \u00E9choue\r\n        throw new Error(`Impossible d'initialiser les mod\u00E8les de pr\u00E9diction: ${error.message}`);\r\n    }\r\n}\r\n\r\n\r\n// Initialiser le clavier\r\nconst Keyboard = {\r\n    elements: {\r\n        main: null,\r\n        keysContainer: null,\r\n        keys: [],\r\n        capsKey: null,\r\n    },\r\n\r\n    properties: {\r\n        value: \"\",\r\n        capsLock: false,\r\n        keyboardInputs: null,\r\n        keyLayout: [\r\n            \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"backspace\",\r\n            \"a\", \"z\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\",\r\n            \"caps\", \"q\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"enter\",\r\n            \"done\", \"w\", \"x\", \"c\", \"v\", \"b\", \"n\", \",\", \".\", \"?\", \"'\", \"space\",\r\n        ],\r\n    },\r\n\r\n    init() {\r\n        // create and setup main element\r\n        this.elements.main =\r\n            document.createElement(\"div\");\r\n        this.elements.main.classList\r\n            .add(\"keyboard\");\r\n        document.body\r\n            .appendChild(this.elements.main);\r\n\r\n        // create and setup child container component\r\n        this.elements.keysContainer =\r\n            document.createElement(\"div\");\r\n        this.elements.keysContainer\r\n            .classList.add(\"keyboard__keys\");\r\n        this.elements.main\r\n            .appendChild(this.elements.keysContainer);\r\n\r\n        // create and setup key elements\r\n        this.elements.keysContainer\r\n            .appendChild(this._createKeys());\r\n        this.elements.keys =\r\n            this.elements.keysContainer\r\n                .querySelectorAll(\".keyboard__key\");\r\n\r\n        // open keyboard for elements with .use-keyboard-input\r\n        this.properties.keyboardInputs =\r\n            document.querySelectorAll(\r\n                \".use-keyboard-input\"\r\n            );\r\n        this.properties\r\n            .keyboardInputs\r\n            .forEach((element) => {\r\n                element.addEventListener(\"focus\", () => {\r\n                    this\r\n                        .open(element.value, (currentValue) => {\r\n                            element.value = currentValue;\r\n                        });\r\n                });\r\n            });\r\n    },\r\n\r\n    _createIconHTML(icon_name) {\r\n        return `<span class=\"material-icons\">${icon_name}</span>`;\r\n    },\r\n\r\n    _createKeyBtn(iconName = \"\", class1 = \"\", onclick = () => {}, class2 = \"\", dataChar = null) {\r\n        this.keyElement = document.createElement(\"button\");\r\n\r\n        this.keyElement.setAttribute(\"type\", \"button\");\r\n        this.keyElement.classList.add(\"keyboard__key\");\r\n\r\n        if (class1) this.keyElement.classList.add(class1);\r\n        if (class2) this.keyElement.classList.add(class2);\r\n\r\n        if (iconName) {\r\n            this.keyElement.innerHTML = this._createIconHTML(iconName);\r\n        }\r\n\r\n        if (dataChar !== null) {\r\n            this.keyElement.dataset.char = dataChar;\r\n        }\r\n\r\n        this.keyElement.addEventListener(\"click\", onclick);\r\n\r\n        return this.keyElement;\r\n    },\r\n\r\n    // Mise \u00E0 jour des surlignages des touches du clavier selon la probabilit\u00E9 des lettres suivantes\r\n    _updateKeyHighlights(context, lastWord) {\r\n        if (!isInitialized) return;\r\n\r\n        try {\r\n            const letterProbs = predictNextLetters(context, lastWord);\r\n\r\n            this.elements.keys.forEach((keyEl) => {\r\n                const char = (keyEl.dataset.char || keyEl.textContent.trim()).toLowerCase();\r\n\r\n                if (!letterProbs[char]) {\r\n                    keyEl.classList.remove(\"activeYellow\", \"activePurple\");\r\n                    return;\r\n                }\r\n\r\n                const prob = letterProbs[char];\r\n                if (prob > 0.2) {\r\n                    keyEl.classList.add(\"activePurple\");\r\n                    keyEl.classList.remove(\"activeYellow\");\r\n                } else if (prob > 0.1 && prob <= 0.2) {\r\n                    keyEl.classList.add(\"activeYellow\");\r\n                    keyEl.classList.remove(\"activePurple\");\r\n                } else {\r\n                    keyEl.classList.remove(\"activeYellow\", \"activePurple\");\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Erreur lors de la mise \u00E0 jour des surlignages:\", error);\r\n        }\r\n    },\r\n\r\n\r\n    // Cr\u00E9ation des touches du clavier\r\n    _createKeys() {\r\n        const fragment =\r\n            document.createDocumentFragment();\r\n\r\n        this.properties.keyLayout.forEach((key) => {\r\n            const insertLineBreak =\r\n                [\"backspace\", \"p\", \"enter\", \"?\"].indexOf(key) !== -1;\r\n\r\n            switch (key) {\r\n                case \"backspace\":\r\n                    this._createKeyBtn(\r\n                        \"backspace\", \"keyboard__key--wide\",\r\n                        () => {\r\n                            this.properties.value = this.properties.value.slice(0, -1);\r\n                            this._updateValueInTarget();\r\n\r\n                            const currentValue = this.properties.value.trim().split(/\\s+/);\r\n                            const lastWord = currentValue[currentValue.length - 1] || \"\";\r\n                            const context = currentValue.slice(0, -1);\r\n\r\n                            this._updateKeyHighlights(context, lastWord);\r\n                        }\r\n                    );\r\n                    break;\r\n\r\n                case \"caps\":\r\n                    this._createKeyBtn(\r\n                        \"keyboard_capslock\",\r\n                        \"keyboard__key--activatable\",\r\n                        () => {\r\n                            this.elements.capsKey\r\n                                .classList\r\n                                .toggle(\"keyboard__key--active\");\r\n                            this._toggleCapsLock();\r\n                        },\r\n                        \"keyboard__key--wide\"\r\n                    );\r\n                    this.elements.capsKey = this.keyElement;\r\n                    break;\r\n\r\n                case \"enter\":\r\n                    this._createKeyBtn(\r\n                        \"keyboard_return\", \"keyboard__key--wide\",\r\n                        () => {\r\n                            this.properties.value += \"\\n\";\r\n                            this._updateValueInTarget();\r\n                        });\r\n                    break;\r\n\r\n                case \"space\":\r\n                    const spaceBtn = this._createKeyBtn(\r\n                        \"space_bar\",\r\n                        \"keyboard__key--extra--wide\",\r\n                        () => {\r\n                            this.properties.value += \" \";\r\n                            this._updateValueInTarget();\r\n\r\n                            // Pr\u00E9parer un nouveau contexte pour pr\u00E9diction d\u2019un nouveau mot\r\n                            const currentValue = this.properties.value.trim().split(/\\s+/);\r\n                            const context = currentValue; // dernier mot \u00E9tant vide\r\n                            const lastWord = \"\"; // nouveau mot vide\r\n\r\n                            this._updateKeyHighlights(context, lastWord);\r\n                        },\r\n                        \"\", // pas de class2\r\n                        \" \" // data-char pour la touche espace\r\n                    );\r\n\r\n                    fragment.appendChild(spaceBtn);\r\n                    break;\r\n\r\n\r\n                case \"done\":\r\n                    this._createKeyBtn(\r\n                        \"check_circle\",\r\n                        \"keyboard__key--dark\",\r\n                        () => {\r\n                            this.close();\r\n                            this._updateValueInTarget();\r\n                        },\r\n                        \"keyboard__key--wide\"\r\n                    );\r\n                    break;\r\n\r\n                default:\r\n                    this._createKeyBtn(\"\", \"\", () => {\r\n                        // Ajout du caract\u00E8re\r\n                        this.properties.value += this.properties.capsLock\r\n                            ? key.toUpperCase()\r\n                            : key.toLowerCase();\r\n\r\n                        this._updateValueInTarget();\r\n\r\n                        // Trouver le mot actuel\r\n                        const currentValue = this.properties.value.trim().split(/\\s+/);\r\n                        const lastWord = currentValue[currentValue.length - 1] || \"\";\r\n                        const context = currentValue.slice(0, -1);\r\n\r\n                        this._updateKeyHighlights(context, lastWord);\r\n                    });\r\n\r\n                    // Affichage de la lettre sur la touche\r\n                    this.keyElement.textContent = key.toLowerCase();\r\n                    break;\r\n\r\n            }\r\n\r\n            fragment.appendChild(this.keyElement);\r\n\r\n            if (insertLineBreak) {\r\n                fragment\r\n                    .appendChild(document.createElement(\"br\"));\r\n            }\r\n        });\r\n        return fragment;\r\n\r\n\r\n    },\r\n\r\n    _updateValueInTarget() {\r\n        this.properties\r\n            .keyboardInputs\r\n            .forEach((keyboard) => {\r\n                keyboard.value =\r\n                    this.properties.value;\r\n            });\r\n    },\r\n\r\n    _toggleCapsLock() {\r\n        this.properties.capsLock =\r\n            !this.properties.capsLock;\r\n\r\n        for (let key of this.elements.keys) {\r\n            if (key.childElementCount === 0) {\r\n                key.textContent =\r\n                    this.properties.capsLock\r\n                        ? key.textContent.toUpperCase()\r\n                        : key.textContent.toLowerCase();\r\n            }\r\n        }\r\n    },\r\n\r\n    open(initialValue, oninput) {\r\n        this.properties.value =\r\n            initialValue || \"\";\r\n        this.elements.main\r\n            .classList\r\n            .remove(\"keyboard--hidden\");\r\n        this.elements.main.classList.add(\"keyboard--visible\");\r\n    },\r\n\r\n    close() {\r\n        this.elements.main.classList.remove(\"keyboard--visible\");\r\n        this.properties.value = this.properties.value;\r\n        this.elements.main\r\n            .classList.add(\"keyboard--hidden\");\r\n    },\r\n\r\n\r\n};\r\n\r\n\r\n// Initialiser le clavier et les mod\u00E8les de pr\u00E9diction\r\nwindow.addEventListener(\"DOMContentLoaded\", async () => {\r\n    try {\r\n        console.log('Initialisation des mod\u00E8les de pr\u00E9diction...');\r\n        await initializePredictionModels();\r\n\r\n        console.log('Initialisation du clavier...');\r\n        Keyboard.init();\r\n        Keyboard.open();\r\n\r\n        console.log('Application pr\u00EAte !');\r\n    } catch (error) {\r\n        console.error('Erreur critique lors du d\u00E9marrage de l\\'application:', error);\r\n        // Afficher un message d'erreur \u00E0 l'utilisateur si n\u00E9cessaire\r\n        alert('Une erreur est survenue lors du d\u00E9marrage de l\\'application');\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n"],
  "mappings": "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",
  "names": ["add", "curryN", "XWrap", "bind", "XMap", "_xmap", "_isArguments", "contains", "keys", "map", "nth", "values", "type", "type", "copy", "slice", "reverse", "b", "equals", "pad", "_toISOString", "XFilter", "_xfilter", "reject", "recur", "keys", "toString", "XReduceBy", "_xreduceBy", "reduceBy", "_Set", "type", "XDrop", "_xdrop", "drop", "takeLast", "fromPairs", "uniqBy", "invoker", "sortBy", "toPairs"]
}
